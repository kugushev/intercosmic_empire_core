// Automatically generated by Interoptopus.

#pragma warning disable 0105
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using AK.Scripts.Core.Native;
using UnityEngine;
#pragma warning restore 0105

namespace AK.Scripts.Core.Native
{
    public static partial class Interop
    {
        public const string NativeLib = "intercosmic_empire";

        static Interop()
        {
        }


        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ICEHelloFromRust")]
        public static extern int ICEHelloFromRust(int a);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ICESteeringSeek")]
        public static extern FFIResult ICESteeringSeek(ref Vector3 position, ref Vector3 target, float mass, float maxSpeed, ref Vector3 currentVelocity, out Vector3 output);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ICEInitGame")]
        public static extern FFIResult ICEInitGame(ref IntPtr context);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ICECloseGame")]
        public static extern FFIResult ICECloseGame(ref IntPtr context);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ICEInitBattle")]
        public static extern void ICEInitBattle(IntPtr context, BattleParameters parameters);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ICEBattleUpdate")]
        public static extern IntPtr ICEBattleUpdate(IntPtr context, float deltaTime);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ICEGetBattleViewModel")]
        public static extern IntPtr ICEGetBattleViewModel(IntPtr context);

    }

    public enum FFIResult
    {
        Ok = 0,
        NullPointerError = 1,
        NotNullPointerError = 2,
    }

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct BattleParameters
    {
        public int seed;
    }

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct BattleViewModel
    {
        public Vector3 test_position;
    }



    public class InteropException<T> : Exception
    {
        public T Error { get; private set; }

        public InteropException(T error): base($"Something went wrong: {error}")
        {
            Error = error;
        }
    }

}
