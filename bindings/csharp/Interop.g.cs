// Automatically generated by Interoptopus.

#pragma warning disable 0105
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using AK.Scripts.Core.Native;
#pragma warning restore 0105

namespace AK.Scripts.Core.Native
{
    public static partial class Interop
    {
        public const string NativeLib = "intercosmic_empire";

        static Interop()
        {
        }


        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ice_init_app")]
        public static extern FFIOutcome ice_init_app(ref IntPtr context);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ice_close_app")]
        public static extern FFIOutcome ice_close_app(ref IntPtr context);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ice_app_start_playground")]
        public static extern FFIResult() ice_app_start_playground(IntPtr context);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ice_game_playground_get_battle_settings")]
        public static extern FFIResultBattleSettings ice_game_playground_get_battle_settings(IntPtr context);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "ice_game_playground_set_battle_settings")]
        public static extern FFIOutcome ice_game_playground_set_battle_settings(IntPtr context, BattleSettings settings);

    }

    public enum FFIOutcome
    {
        Ok = 0,
        Unable = 1,
        Error = 2,
        Panic = 3,
    }

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct BattleSettings
    {
        public int seed;
        public int arr0;
        public int arr1;
        public int arr2;
        public int arr3;
    }

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct FFIResult()
    {
        public void value;
        public FFIOutcome outcome;
    }

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct FFIResultBattleSettings
    {
        public BattleSettings value;
        public FFIOutcome outcome;
    }



    public class InteropException<T> : Exception
    {
        public T Error { get; private set; }

        public InteropException(T error): base($"Something went wrong: {error}")
        {
            Error = error;
        }
    }

}
